using System.Collections.Immutable;
using KidsTown.PlanningCenterApiClient.Models.CheckInsResult;
using KidsTown.Shared;

namespace KidsTown.IntegrationTests.TestData;

public static class TestDataFactory
{
    public static IImmutableList<TestData> GetTestData()
    {
        var testData = ImmutableList.Create(
            new TestData(
                "Hanna",
                "Hase",
                "Hanna",
                "Osterhase",
                checkInsId: 1,
                peopleId: 1,
                AttendeeType.Regular,
                TestLocationIds.Haesli,
                ImmutableList<TestFieldData>.Empty,
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 1,
                "Hase Household"),
            new TestData(
                "Sarah",
                "Schaf",
                checkInsId: 2,
                peopleId: null,
                AttendeeType.Guest,
                TestLocationIds.Schoefli,
                "2S2S"),
            new TestData(
                "Frida",
                "Fuchs",
                checkInsId: 3,
                peopleId: 3,
                attendanceType: AttendeeType.Volunteer,
                testLocation: TestLocationIds.Fuechsli,
                peopleFirstName: "Frida",
                peopleLastName: "Fuchser",
                fieldData: ImmutableList.Create(
                    new TestFieldData(
                        PeopleFieldId.NeedsToBePickedUp,
                        FieldOptionId: 3,
                        "false")),
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 3,
                householdName: "Fuchs Household"),
            new TestData(
                "Hans",
                "Hase",
                checkInsId: 4,
                peopleId: 4,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.Haesli,
                peopleFirstName: "Hans",
                peopleLastName: "Hase",
                fieldData: ImmutableList.Create(
                    new TestFieldData(
                        PeopleFieldId.NeedsToBePickedUp,
                        FieldOptionId: 4,
                        "true")),
                expectedMayLeaveAlone: false,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 1,
                householdName: "Hase Household"),
            new TestData(
                "Sandro",
                "Schaf",
                checkInsId: 5,
                peopleId: 5,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.Schoefli,
                peopleFirstName: "Sandro",
                peopleLastName: "Schaf",
                fieldData: ImmutableList.Create(
                    new TestFieldData(
                        PeopleFieldId.Kab,
                        FieldOptionId: 5,
                        "true")),
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: true,
                securityCode: "2S2S",
                householdId: 2,
                householdName: "Schaf Household"),
            new TestData(
                "Franz",
                "Fox",
                checkInsId: 6,
                peopleId: 6,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.Fuechsli,
                peopleFirstName: "Franz",
                peopleLastName: "Fox",
                fieldData: ImmutableList.Create(
                    new TestFieldData(
                        PeopleFieldId.Kab,
                        FieldOptionId: 6,
                        "true"),
                    new TestFieldData(
                        PeopleFieldId.NeedsToBePickedUp,
                        FieldOptionId: 7,
                        "false")),
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: true,
                householdId: 3,
                householdName: "Fuchs Household"),
            new TestData(
                "Henry",
                "Hasenfuss",
                checkInsId: 7,
                peopleId: 7,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.Haesli,
                peopleFirstName: "Henry",
                peopleLastName: "Hasenfuss",
                fieldData: ImmutableList.Create(
                    new TestFieldData(
                        PeopleFieldId.Kab,
                        FieldOptionId: 8,
                        Value: null),
                    new TestFieldData(
                        PeopleFieldId.NeedsToBePickedUp,
                        FieldOptionId: 9,
                        Value: null)),
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 1,
                householdName: "Hase Household",
                securityCode: "1H1H"),
            new TestData(
                "Henry",
                "Hasenfuss",
                checkInsId: 8,
                peopleId: 7,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.Haesli,
                peopleFirstName: "Henry",
                peopleLastName: "Hasenfuss",
                fieldData: ImmutableList.Create(
                    new TestFieldData(
                        PeopleFieldId.Kab,
                        FieldOptionId: 8,
                        Value: null),
                    new TestFieldData(
                        PeopleFieldId.NeedsToBePickedUp,
                        FieldOptionId: 9,
                        Value: null)),
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 1,
                householdName: "Hase Household",
                securityCode: "1H1H"),
            new TestData(
                "Ernst",
                "Erster",
                checkInsId: 9,
                peopleId: 9,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.KidsChurch1St,
                peopleFirstName: "Ernst",
                peopleLastName: "Erster",
                fieldData: ImmutableList<TestFieldData>.Empty,
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 4,
                householdName: "KidsChurch Household"),
            new TestData(
                "Zara",
                "Zweiter",
                checkInsId: 10,
                peopleId: 10,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.KidsChurch2Nd,
                peopleFirstName: "Zara",
                peopleLastName: "Zweiter",
                fieldData: ImmutableList<TestFieldData>.Empty,
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 4,
                householdName: "KidsChurch Household"),
            new TestData(
                "Daniel",
                "Dritter",
                checkInsId: 11,
                peopleId: 11,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.KidsChurch3Rd,
                peopleFirstName: "Daniel",
                peopleLastName: "Dritter",
                fieldData: ImmutableList<TestFieldData>.Empty,
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 4,
                householdName: "KidsChurch Household"),
            new TestData(
                "Vreni",
                "Vierter",
                checkInsId: 12,
                peopleId: 12,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.KidsChurch4Th,
                peopleFirstName: "Vreni",
                peopleLastName: "Vierter",
                fieldData: ImmutableList<TestFieldData>.Empty,
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 4,
                householdName: "KidsChurch Household"),
            new TestData(
                "Freddie",
                "Fünfter",
                checkInsId: 13,
                peopleId: 13,
                attendanceType: AttendeeType.Regular,
                testLocation: TestLocationIds.KidsChurch5Th,
                peopleFirstName: "Freddie",
                peopleLastName: "Fünfter",
                fieldData: ImmutableList<TestFieldData>.Empty,
                expectedMayLeaveAlone: true,
                expectedHasPeopleWithoutPickupPermission: false,
                householdId: 4,
                householdName: "KidsChurch Household"));

        return testData;
    }
}